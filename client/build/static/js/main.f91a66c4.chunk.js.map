{"version":3,"sources":["api/api.ts","api/auth-api.ts","redux/auth-reducer.ts","redux/auth-selectors.ts","pages/Login.tsx","pages/Register.tsx","api/todo-api.ts","utils/dateConverter.ts","redux/todo-reducer.ts","redux/todo-selectors.ts","pages/Statistics.tsx","components/TodoItem.tsx","components/TodoList.tsx","components/AddTodo.tsx","pages/Todo.tsx","components/AppRoutes.tsx","components/Board.tsx","components/Footer.tsx","components/Header.tsx","components/Layout.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["api","axios","create","baseURL","withCredentials","interceptors","request","use","req","headers","authorization","localStorage","token","error","Promise","reject","authApi","register","name","email","password","post","then","res","data","catch","response","login","verify","get","initialState","isAuth","errors","SET_IS_AUTH","SET_ERROR","actions","auth","type","payload","authReducer","state","action","selectIsAuth","selectErrors","Login","dispatch","useDispatch","serverErrors","useSelector","useForm","handleSubmit","watch","formState","setError","useEffect","message","className","onSubmit","a","code","setItem","newErrors","placeholder","Register","todoApi","createTodo","description","date","getAllTodos","getTodoById","id","removeTodo","delete","changeTodo","solved","put","getOldTodosCount","removeOldTodos","getSolvedCount","dateConverter","result","getFullYear","getMonth","getDate","Number","todos","selectedDate","Date","oldTodos","completedCount","incompletedCount","SET_TODOS","ADD_TODO","REMOVE_TODO","CHANGE_TODO","CHANGE_SELECTED_DATE","GET_OLD_TODOS_COUNT","CHANGE_COMPLETED_COUNT","CHANGE_INCOMPLETED_COUNT","todo","count","todoReducer","filter","t","todo_id","map","changeTodoThunk","selectTodos","selectSelectedDate","selectOldTodosCount","selectCompletedCount","selectIncompletedCount","Statistics","Deprecated","oldTodosCount","onClick","Completed","Inompleted","TodoItem","useState","value","setValue","itemClass","cn","contentEditable","suppressContentEditableWarning","onInput","e","currentTarget","innerText","onBlur","React","memo","TodoList","AddTodo","onCreate","Todo","onChange","AppRoutes","path","element","to","Board","children","Footer","Header","clear","Layout","App","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f91a66c4.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"/\",\n  withCredentials: true,\n});\n\napi.interceptors.request.use(\n  (req) => {\n    req.headers!.authorization = localStorage.token;\n    return req;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport default api;\n","import api from \"./api\";\n\nconst authApi = {\n  // register\n\n  register: (name: string, email: string, password: string) => {\n    return api\n      .post<TRegisterSuccess | TRegisterError>(\"/auth/register\", {\n        name,\n        email,\n        password,\n      })\n      .then((res) => res.data)\n      .catch((res) => res.response.data);\n  },\n\n  // login\n\n  login: (email: string, password: string) => {\n    return api\n      .post<TLoginSuccess | TLoginError>(\"/auth/login\", { email, password })\n      .then((res) => res.data)\n      .catch((res) => res.response.data);\n  },\n\n  // verify\n\n  verify: () => {\n    return api.get<boolean>(\"/auth/verify\").then((res) => res.data);\n  },\n};\n\nexport default authApi;\n\n// TYPES\n\ntype TLoginSuccess = {\n  code: 0;\n  token: string;\n};\n\ntype TLoginError = {\n  code: 1;\n  message: string;\n};\n\ntype TRegisterSuccess = {\n  code: 0;\n  token: string;\n};\n\ntype TRegisterError = {\n  code: 1;\n  message: string;\n};\n","import { ThunkAction } from \"redux-thunk\";\nimport authApi from \"../api/auth-api\";\nimport { TInferValue, TRootState } from \"./store\";\n\n// STATE\n\nconst initialState = {\n  isAuth: false,\n  errors: {\n    login: \"\",\n    register: \"\",\n  } as TErrors,\n};\n\n// ACTIONS\n\nconst SET_IS_AUTH = \"todo/auth/SET_IS_AUTH\";\nconst SET_ERROR = \"todo/auth/SET_ERROR\";\n\n// ACTION CREATORS\n\nexport const actions = {\n  isAuthChanged: (auth: boolean) =>\n    ({ type: SET_IS_AUTH, payload: { auth } } as const),\n  errorReceived: (error: TErrors) =>\n    ({ type: SET_ERROR, payload: { error } } as const),\n};\n\n// REDUCER\n\nconst authReducer = (state: TState = initialState, action: TAction): TState => {\n  switch (action.type) {\n    case SET_IS_AUTH:\n      return {\n        ...state,\n        isAuth: action.payload.auth,\n      };\n    case SET_ERROR:\n      return {\n        ...state,\n        errors: action.payload.error,\n      };\n    default:\n      return state;\n  }\n};\n\n// THUNKS\n\nexport const registerThunk = (\n  name: string,\n  email: string,\n  password: string\n): TThunk => {\n  return async (dispatch) => {\n    const response = await authApi.register(name, email, password);\n    if (response.code === 0) {\n      localStorage.setItem(\"token\", response.token);\n      dispatch(actions.isAuthChanged(true));\n    } else {\n      const newErrors = {\n        login: \"\",\n        register: response.message,\n      };\n      dispatch(actions.errorReceived(newErrors));\n    }\n  };\n};\n\nexport const loginThunk = (email: string, password: string): TThunk => {\n  return async (dispatch) => {\n    const response = await authApi.login(email, password);\n    if (response.code === 0) {\n      localStorage.setItem(\"token\", response.token);\n      dispatch(actions.isAuthChanged(true));\n    } else {\n      const newErrors = {\n        login: response.message,\n        register: \"\",\n      };\n      dispatch(actions.errorReceived(newErrors));\n    }\n  };\n};\n\nexport const verifyThunk = (): TThunk => {\n  return async (dispatch) => {\n    const response = await authApi.verify();\n    if (response) {\n      dispatch(actions.isAuthChanged(true));\n    }\n  };\n};\n\nexport default authReducer;\n\n// TYPES\n\ntype TState = typeof initialState;\n\ntype TAction = ReturnType<TInferValue<typeof actions>>;\n\ntype TThunk = ThunkAction<Promise<void>, TRootState, {}, TAction>;\n\ntype TErrors = {\n  login: string;\n  register: string;\n};\n","import { TRootState } from \"./store\";\n\nexport const selectIsAuth = (state: TRootState) => {\n    return state.auth.isAuth;\n}\n\nexport const selectErrors = (state: TRootState) => {\n    return state.auth.errors\n}","import React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginThunk } from \"../redux/auth-reducer\";\nimport { selectErrors } from \"../redux/auth-selectors\";\nimport \"../scss/Login.scss\";\n\nconst Login = () => {\n  const dispatch = useDispatch();\n  const serverErrors = useSelector(selectErrors);\n  const { register, handleSubmit, watch, formState: {errors}, setError} = useForm();\n\n  const onSubmit = () => {\n      dispatch(loginThunk(watch(\"email\"), watch(\"password\")));\n  };\n\n  useEffect(()=>{\n    setError(\"password\", {\n      type: \"server\",\n      message: serverErrors.login\n    })\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [serverErrors.login])\n\n  return (\n    <section className=\"login\">\n      <h1 className=\"login__title\">Login</h1>\n      <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\n        <input\n          className=\"form__input\"\n          type=\"email\"\n          placeholder=\"email\"\n          {...register(\"email\")}\n        />\n        <input\n          className=\"form__input\"\n          type=\"password\"\n          placeholder=\"password\"\n          {...register(\"password\")}\n        />\n        <button className=\"form__btn\" type=\"submit\"></button>\n      </form>\n      <div className=\"login__error\">{errors.password && errors.password.message}</div>\n    </section>\n  );\n};\n\nexport default Login;\n","import React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { registerThunk } from \"../redux/auth-reducer\";\nimport { selectErrors } from \"../redux/auth-selectors\";\nimport \"../scss/Register.scss\";\n\nconst Register: React.FC = () => {\n  const dispatch = useDispatch();\n  const serverErrors = useSelector(selectErrors);\n  const {\n    register,\n    handleSubmit,\n    watch,\n    setError,\n    formState: { errors },\n  } = useForm();\n\n  const onSubmit = () => {\n    dispatch(registerThunk(watch(\"name\"), watch(\"email\"), watch(\"password\")));\n  };\n\n  useEffect(() => {\n    setError(\"password\", {\n      type: \"server\",\n      message: serverErrors.register,\n    });\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [serverErrors.register]);\n\n  return (\n    <section className=\"register\">\n      <h1 className=\"register__title\">Register</h1>\n      <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\n        <input\n          className=\"form__input\"\n          type=\"email\"\n          placeholder=\"email\"\n          {...register(\"email\")}\n        />\n        <input\n          className=\"form__input\"\n          type=\"password\"\n          placeholder=\"password\"\n          {...register(\"password\")}\n        />\n        <input\n          className=\"form__input\"\n          type=\"text\"\n          placeholder=\"name\"\n          {...register(\"name\")}\n        />\n        <button className=\"form__btn\" type=\"submit\"></button>\n      </form>\n      <div className=\"register__error\">\n        {errors.password && errors.password.message}\n      </div>\n    </section>\n  );\n};\n\nexport default Register;\n","import { TTodo } from \"../redux/todo-reducer\";\nimport api from \"./api\";\n\nconst todoApi = {\n  // create todo\n\n  createTodo: (description: string, date: number) => {\n    return api\n      .post<TTodo>(\"/todo\", { description, date })\n      .then((res) => res.data);\n  },\n\n  // get all todos\n\n  getAllTodos: (date: number) => {\n    return api.get<TTodo[]>(`/todo/${date}`).then((res) => res.data);\n  },\n\n  // get todo by id\n\n  getTodoById: (id: number) => {\n    return api.get<TTodo>(`/todo/${id}`).then((res) => res.data);\n  },\n\n  // remove todo\n\n  removeTodo: (id: number) => {\n    return api.delete<TTodo>(`/todo/${id}`).then((res) => res.data);\n  },\n\n  // change todo\n\n  changeTodo: (id: number, description: string, solved: boolean) => {\n    return api\n      .put<TTodo>(`/todo/${id}`, { description, solved })\n      .then((res) => res.data);\n  },\n\n  // get count of old todos\n\n  getOldTodosCount: (date: number) => {\n    return api\n      .get<{ count: number }>(`/todo/old/${date}`)\n      .then((res) => res.data);\n  },\n\n  removeOldTodos: (date: number) => {\n    return api.delete<{code: number}>(`/todo/old/${date}`).then(res => res.data);\n  },\n\n  getSolvedCount: (solved: boolean) => {\n    return api.get(`/todo/statistics/count?solved=${solved}`).then(res => res.data);\n  }\n};\n\nexport default todoApi;\n","export const dateConverter = (date: Date) => {\n  const result = `${date.getFullYear()}${date.getMonth()}${date.getDate()}`;\n  return Number(result);\n};\n","import { ThunkAction } from \"redux-thunk\";\nimport todoApi from \"../api/todo-api\";\nimport { dateConverter } from \"../utils/dateConverter\";\nimport { TInferValue, TRootState } from \"./store\";\n\n// STATE\n\nconst initialState = {\n  todos: [] as TTodo[],\n  selectedDate: new Date() as Date,\n  oldTodos: 0, // count of old todos\n  completedCount: 0,\n  incompletedCount: 0,\n};\n\n// ACTIONS\n\nconst SET_TODOS = \"todo/todo/SET_TODOS\";\nconst ADD_TODO = \"todo/todo/ADD_TODO\";\nconst REMOVE_TODO = \"todo/todo/REMOVE_TODO\";\nconst CHANGE_TODO = \"todo/todo/CHANGE_TODO\";\nconst CHANGE_SELECTED_DATE = \"todo/todo/CHANGE_SELECTED_DATE\";\nconst GET_OLD_TODOS_COUNT = \"todo/todo/GET_OLD_TODOS_COUNT\";\nconst CHANGE_COMPLETED_COUNT = \"todo/todo/CHANGE_COMPLETED_COUNT\";\nconst CHANGE_INCOMPLETED_COUNT = \"todo/todo/CHANGE_INCOMPLETED_COUNT\";\n\n// ACTION CREATORS\n\nexport const actions = {\n  todosReceived: (todos: TTodo[]) =>\n    ({ type: SET_TODOS, payload: { todos } } as const),\n  todoAdded: (todo: TTodo) => ({ type: ADD_TODO, payload: { todo } } as const),\n  todoRemoved: (todo: TTodo) =>\n    ({ type: REMOVE_TODO, payload: { todo } } as const),\n  todoChanged: (todo: TTodo) =>\n    ({ type: CHANGE_TODO, payload: { todo } } as const),\n  dateChanged: (date: Date) =>\n    ({ type: CHANGE_SELECTED_DATE, payload: { date } } as const),\n  todosCountChanged: (count: number) =>\n    ({ type: GET_OLD_TODOS_COUNT, payload: { count } } as const),\n  completedCountChanged: (count: number) =>\n    ({ type: CHANGE_COMPLETED_COUNT, payload: { count } } as const),\n  incompletedCountChanged: (count: number) =>\n    ({ type: CHANGE_INCOMPLETED_COUNT, payload: { count } } as const),\n};\n\n// REDUCER\n\nconst todoReducer = (state: TState = initialState, action: TAction): TState => {\n  switch (action.type) {\n    case CHANGE_COMPLETED_COUNT:\n      return {\n        ...state,\n        completedCount: action.payload.count,\n      };\n    case CHANGE_INCOMPLETED_COUNT:\n      return {\n        ...state,\n        incompletedCount: action.payload.count,\n      };\n    case SET_TODOS:\n      return {\n        ...state,\n        todos: action.payload.todos,\n      };\n    case ADD_TODO: {\n      return {\n        ...state,\n        todos: [...state.todos, action.payload.todo],\n      };\n    }\n    case REMOVE_TODO:\n      return {\n        ...state,\n        todos: [\n          ...state.todos.filter(\n            (t) => t.todo_id !== action.payload.todo.todo_id\n          ),\n        ],\n      };\n    case CHANGE_TODO:\n      return {\n        ...state,\n        todos: [\n          ...state.todos.map((t) =>\n            t.todo_id === action.payload.todo.todo_id ? action.payload.todo : t\n          ),\n        ],\n      };\n    case CHANGE_SELECTED_DATE:\n      return {\n        ...state,\n        selectedDate: action.payload.date,\n      };\n    case GET_OLD_TODOS_COUNT:\n      return {\n        ...state,\n        oldTodos: action.payload.count,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default todoReducer;\n\n// THUNKS\n\nexport const getAllTodosThunk = (date: Date): TThunk => {\n  return async (dispatch) => {\n    const response = await todoApi.getAllTodos(dateConverter(date));\n    if (response) {\n      dispatch(actions.todosReceived(response));\n    }\n  };\n};\n\nexport const createTodoThunk = (description: string, date: Date): TThunk => {\n  return async (dispatch) => {\n    const response = await todoApi.createTodo(description, dateConverter(date));\n    if (response) {\n      dispatch(actions.todoAdded(response));\n    }\n  };\n};\n\nexport const removeTodoThunk = (id: number): TThunk => {\n  return async (dispatch) => {\n    const response = await todoApi.removeTodo(id);\n    if (response) {\n      dispatch(actions.todoRemoved(response));\n    }\n  };\n};\n\nexport const changeTodoThunk = (\n  id: number,\n  description: string,\n  solved: boolean\n): TThunk => {\n  return async (dispatch) => {\n    const response = await todoApi.changeTodo(id, description, solved);\n    if (response) {\n      dispatch(actions.todoChanged(response));\n    }\n  };\n};\n\nexport const getOldTodosCountThunk = (date: Date): TThunk => {\n  return async (dispatch) => {\n    const count = await todoApi.getOldTodosCount(dateConverter(date));\n    if (count) {\n      dispatch(actions.todosCountChanged(count.count));\n    }\n  };\n};\n\nexport const removeOldTodosThunk = (date: Date): TThunk => {\n  return async (dispatch) => {\n    const response = await todoApi.removeOldTodos(dateConverter(date));\n    if (response.code === 0) {\n      dispatch(actions.todosCountChanged(0));\n    }\n  };\n};\n\nexport const getCompletedCountThunk = (): TThunk => {\n  return async (dispatch) => {\n    const count = await todoApi.getSolvedCount(true);\n    if (count) {\n      dispatch(actions.completedCountChanged(count.count));\n    }\n  };\n};\n\nexport const getIncompletedCountThunk = (): TThunk => {\n  return async (dispatch) => {\n    const count = await todoApi.getSolvedCount(false);\n    if (count) {\n      dispatch(actions.incompletedCountChanged(count.count));\n    }\n  };\n};\n\n// TYPES\n\nexport type TTodo = {\n  todo_id: number;\n  solved: boolean;\n  description: string;\n  date: Date;\n};\n\ntype TState = typeof initialState;\n\ntype TAction = ReturnType<TInferValue<typeof actions>>;\n\ntype TThunk = ThunkAction<Promise<void>, TRootState, {}, TAction>;\n","import { TRootState } from \"./store\";\n\nexport const selectTodos = (state: TRootState) => {\n  return state.todo.todos;\n};\n\nexport const selectSelectedDate = (state: TRootState) => {\n  return state.todo.selectedDate;\n};\n\nexport const selectOldTodosCount = (state: TRootState) => {\n  return state.todo.oldTodos;\n};\n\nexport const selectCompletedCount = (state: TRootState) => {\n  return state.todo.completedCount;\n}\n\nexport const selectIncompletedCount = (state: TRootState) => {\n  return state.todo.incompletedCount;\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  getCompletedCountThunk,\n  getIncompletedCountThunk,\n  getOldTodosCountThunk,\n  removeOldTodosThunk,\n} from \"../redux/todo-reducer\";\nimport {\n  selectCompletedCount,\n  selectIncompletedCount,\n  selectOldTodosCount,\n} from \"../redux/todo-selectors\";\nimport \"../scss/Statistics.scss\";\n\nconst Statistics: React.FC = () => {\n  return (\n    <div className=\"statistics\">\n      <ul className=\"statistics__list\">\n        <li className=\"statistics__item\">\n          <Deprecated />\n        </li>\n        <li className=\"statistics__item\">\n          <Completed />\n        </li>\n        <li className=\"statistics__item\">\n          <Inompleted />\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Statistics;\n\nconst Deprecated: React.FC = () => {\n  const dispatch = useDispatch();\n  const oldTodosCount = useSelector(selectOldTodosCount);\n\n  useEffect(() => {\n    dispatch(getOldTodosCountThunk(new Date()));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onRemoveTodos = () => {\n    dispatch(removeOldTodosThunk(new Date()));\n  };\n\n  return (\n    <section className=\"statistics-item\">\n      <h2 className=\"statistics-item__title\">Number of old todos:</h2>\n      <span className=\"statistics-item__count\">{oldTodosCount}</span>\n      <span className=\"statistics-item__clear-btn\" onClick={onRemoveTodos}>\n        remove all\n      </span>\n    </section>\n  );\n};\n\nconst Completed: React.FC = () => {\n  const dispatch = useDispatch();\n  const completedCount = useSelector(selectCompletedCount);\n\n  useEffect(() => {\n    dispatch(getCompletedCountThunk());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <section className=\"statistics-item\">\n      <h2 className=\"statistics-item__title\">Number of completed todos:</h2>\n      <span className=\"statistics-item__count\">{completedCount}</span>\n    </section>\n  );\n};\n\nconst Inompleted: React.FC = () => {\n  const dispatch = useDispatch();\n  const incompletedCount = useSelector(selectIncompletedCount);\n\n  useEffect(() => {\n    dispatch(getIncompletedCountThunk());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <section className=\"statistics-item\">\n      <h2 className=\"statistics-item__title\">Number of incompleted todos:</h2>\n      <span className=\"statistics-item__count\">{incompletedCount}</span>\n    </section>\n  );\n};\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { changeTodoThunk, removeTodoThunk, TTodo } from \"../redux/todo-reducer\";\nimport \"../scss/TodoItem.scss\";\nimport cn from \"classnames\";\n\nconst TodoItem: React.FC<TProps> = ({ description, todo }) => {\n  // editable content from <li>\n  const [value, setValue] = useState(description);\n  const dispatch = useDispatch();\n\n  const onSendChange = () => {\n    dispatch(changeTodoThunk(todo.todo_id, value, todo.solved));\n  };\n\n  // classes\n  const itemClass = cn({\n    \"todo-list__item\": true,\n    \"todo-list__item--solved\": todo.solved,\n  });\n\n  // solve todo handler\n\n  const onSolved = () => {\n    dispatch(changeTodoThunk(todo.todo_id, value, !todo.solved));\n  };\n\n  // delete todo handler\n\n  const onDelete = () => {\n    dispatch(removeTodoThunk(todo.todo_id));\n  };\n\n  return (\n    <li className={itemClass}>\n      <div\n        contentEditable\n        suppressContentEditableWarning\n        onInput={(e) => setValue(e.currentTarget.innerText)}\n        onBlur={onSendChange}\n        className=\"todo-list__item-text\"\n      >\n        {description}\n      </div>\n      <span className=\"todo-list__item-solve-btn\" onClick={onSolved}></span>\n      <span className=\"todo-list__item-delete-btn\" onClick={onDelete}></span>\n    </li>\n  );\n};\n\nexport default React.memo(TodoItem);\n\n// TYPES\n\ntype TProps = {\n  description: string;\n  todo: TTodo;\n};\n","import React from 'react'\nimport { useSelector } from 'react-redux';\nimport { selectTodos } from '../redux/todo-selectors';\nimport \"../scss/TodoList.scss\";\nimport TodoItem from './TodoItem';\n\nconst TodoList: React.FC = () => {\n    const todos = useSelector(selectTodos);\n\n    return (\n        <ul className=\"todo-list\">\n            {todos.map(t => <TodoItem key={t.todo_id} description={t.description} todo={t} />)}\n        </ul>\n    )\n}\n\nexport default TodoList\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createTodoThunk } from \"../redux/todo-reducer\";\nimport { selectSelectedDate } from \"../redux/todo-selectors\";\nimport \"../scss/AddTodo.scss\";\n\nconst AddTodo: React.FC = () => {\n  const dispatch = useDispatch();\n  const selectedDate = useSelector(selectSelectedDate);\n\n  const initialValue = \"\";\n\n  // value from editable text\n\n  const [value, setValue] = useState(initialValue);\n\n  // create new todo\n\n  const onCreate = (e: React.FocusEvent<HTMLDivElement, Element>) => {\n    // create only if text not equal initialValue\n\n    if (e.currentTarget.innerText !== initialValue) {\n      dispatch(createTodoThunk(value, selectedDate));\n    }\n\n    // reset editable text\n    e.currentTarget.innerText = initialValue;\n  };\n\n  return (\n    <div\n      className=\"add-todo\"\n      contentEditable\n      suppressContentEditableWarning\n      onInput={(e) => setValue(e.currentTarget.innerText)}\n      onBlur={(e) => onCreate(e)}\n    >\n      {initialValue}\n    </div>\n  );\n};\n\nexport default AddTodo;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actions, getAllTodosThunk } from \"../redux/todo-reducer\";\nimport \"../scss/Todo.scss\";\nimport Calendar from \"react-calendar\";\nimport TodoList from \"../components/TodoList\";\nimport AddTodo from \"../components/AddTodo\";\nimport { selectSelectedDate } from \"../redux/todo-selectors\";\n\nconst Todo: React.FC = () => {\n  const dispatch = useDispatch();\n  const selectedDate = useSelector(selectSelectedDate);\n\n  useEffect(() => {\n    dispatch(getAllTodosThunk(selectedDate));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedDate]);\n\n  const onDateChange = (e: Date) => {\n    dispatch(actions.dateChanged(e));\n  };\n\n  return (\n    <section className=\"todo\">\n      <div className=\"todo__calendar-img\"></div>\n      <Calendar value={selectedDate} onChange={onDateChange} />\n      <TodoList />\n      <AddTodo />\n    </section>\n  );\n};\n\nexport default Todo;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Navigate, Route, Routes } from \"react-router\";\nimport Login from \"../pages/Login\";\nimport Register from \"../pages/Register\";\nimport Statistics from \"../pages/Statistics\";\nimport Todo from \"../pages/Todo\";\nimport { selectIsAuth } from \"../redux/auth-selectors\";\n\nconst AppRoutes: React.FC = () => {\n  const isAuth = useSelector(selectIsAuth);\n\n  return (\n    <Routes>\n      <Route\n        path=\"/auth/login\"\n        element={isAuth ? <Navigate to=\"/todo\" /> : <Login />}\n      />\n      <Route\n        path=\"/auth/register\"\n        element={isAuth ? <Navigate to=\"/todo\" /> : <Register />}\n      />\n      <Route\n        path=\"/todo\"\n        element={isAuth ? <Todo /> : <Navigate to=\"/auth/login\" />}\n      />\n      <Route\n        path=\"/statistics\"\n        element={isAuth ? <Statistics /> : <Navigate to=\"/auth/login\" />}\n      />\n      <Route path=\"/\" element={<Navigate to=\"/todo\" />} />\n    </Routes>\n  );\n};\n\nexport default AppRoutes;\n","import React, { ReactChild } from \"react\";\nimport \"../scss/Board.scss\";\n\nconst Board: React.FC<TProps> = ({ children }) => {\n  return (\n      <div className=\"board\">{children}</div>\n  );\n};\n\nexport default Board;\n\n// TYPES\n\ntype TProps = {\n  children: ReactChild;\n};\n","import React from 'react'\nimport \"../scss/Footer.scss\";\n\nconst Footer: React.FC = () => {\n    return (\n        <footer className=\"footer\">\n            <p>&copy; Copyright 2021. All Rights Reserved.</p>\n        </footer>\n    )\n}\n\nexport default Footer\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { actions } from \"../redux/auth-reducer\";\nimport { selectIsAuth } from \"../redux/auth-selectors\";\nimport \"../scss/Header.scss\";\n\nconst Header: React.FC = () => {\n  const dispatch = useDispatch();\n  const isAuth = useSelector(selectIsAuth);\n\n  const onLogout = () => {\n    localStorage.clear();\n    dispatch(actions.isAuthChanged(false));\n  };\n\n  return (\n    <header className=\"header\">\n      <div className=\"logo\">\n        <NavLink className=\"logo__link\" to=\"/todo\">\n          TODOshka\n        </NavLink>\n      </div>\n      <nav className=\"nav\">\n        <ul className=\"nav__list\">\n          {!isAuth ? (\n            <>\n              <li className=\"nav__item\">\n                <NavLink className=\"nav__link\" to=\"/auth/login\">\n                  login\n                </NavLink>\n              </li>\n              <li className=\"nav__item\">\n                <NavLink className=\"nav__link\" to=\"/auth/register\">\n                  register\n                </NavLink>\n              </li>\n            </>\n          ) : (\n            <>\n              <li className=\"nav__item\">\n                <NavLink className=\"nav__link\" to=\"/statistics\">\n                  statistics\n                </NavLink>\n              </li>\n              <li className=\"nav__item\">\n                <span className=\"header__auth-logout\" onClick={onLogout}>\n                  logout\n                </span>\n              </li>\n            </>\n          )}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport AppRoutes from \"./AppRoutes\";\nimport Board from \"./Board\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\n\nconst Layout: React.FC = ({ children }) => {\n  return (\n    <div className=\"layout\">\n      <div className=\"container\">\n        <div className=\"wrapper\">\n          <Header />\n          <Board>\n            <AppRoutes />\n          </Board>\n        </div>\n        <Footer />\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Layout from \"./components/Layout\";\nimport { verifyThunk } from \"./redux/auth-reducer\";\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(verifyThunk());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <main className=\"main\">\n      <Layout />\n    </main>\n  );\n};\n\nexport default App;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport authReducer from \"./auth-reducer\";\nimport todoReducer from \"./todo-reducer\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  todo: todoReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport default store;\n\n// TYPES\n\nexport type TInferValue<T> = T extends { [key: string]: infer U } ? U : never;\n\nexport type TRootState = ReturnType<typeof rootReducer>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport \"./scss/styles.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}